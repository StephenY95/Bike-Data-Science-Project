fit5=arima(NoLogSeaso.earnings, order = c(1,0,0), seasonal = c(1,0,1))
fit6=arima(NoLogSeaso.earnings, order = c(1,0,0), seasonal = c(0,0,1))
fit7=arima(NoLogSeaso.earnings, order = c(1,0,1), seasonal = c(0,0,0))
fit8=arima(NoLogSeaso.earnings, order = c(0,0,1), seasonal = c(1,0,1))
fit9=arima(NoLogSeaso.earnings, order = c(0,0,1), seasonal = c(0,0,0))
fit10=arima(NoLogSeaso.earnings, order = c(0,0,1), seasonal = c(1,0,0))
fit11=arima(NoLogSeaso.earnings, order = c(0,0,1), seasonal = c(0,0,1))
fit12=arima(NoLogSeaso.earnings, order = c(0,0,0), seasonal = c(1,0,1))
fit13=arima(NoLogSeaso.earnings, order = c(0,0,0), seasonal = c(1,0,0))
fit14=arima(NoLogSeaso.earnings, order = c(0,0,0), seasonal = c(0,0,1))
fit15=arima(NoLogSeaso.earnings, order = c(1,0,0), seasonal = c(1,0,0))
AIC(fit1)
AIC(fit2)
AIC(fit3)
AIC(fit4)
AIC(fit5)
AIC(fit6)
AIC(fit7)
AIC(fit8)
AIC(fit9)
AIC(fit10)
AIC(fit11)
AIC(fit12)
AIC(fit13)
AIC(fit14)
AIC(fit15)
setwd("C:/Users/steph/OneDrive/Documents/Stats505/")
#IMPORTING DATA
df=scan(paste("jj.txt", sep=""))
logdf=log(df)
df.ts=ts(data=df,frequency=4,start=1960, end = 1980)
logdf.ts=ts(data=logdf,frequency=4,start=1960, end = 1980)
#PLOTTING TIMESERIES, ACF, and PACF
par(mfrow=c(2,2))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
Autocorrelation <- acf(df.ts, lag.max = 50, plot = FALSE)
plot(Autocorrelation, main = "ACF of Earnings")
PartialAutocorrelation <- pacf(df.ts, lag.max = 50, plot = FALSE)
plot(PartialAutocorrelation, main = "PACF of Earnings")
par(mfrow=c(1,4))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
Autocorrelation <- acf(df.ts, lag.max = 50, plot = FALSE)
plot(Autocorrelation, main = "ACF of Earnings")
PartialAutocorrelation <- pacf(df.ts, lag.max = 50, plot = FALSE)
plot(PartialAutocorrelation, main = "PACF of Earnings")
par(mfrow=c(4,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
Autocorrelation <- acf(df.ts, lag.max = 50, plot = FALSE)
plot(Autocorrelation, main = "ACF of Earnings")
PartialAutocorrelation <- pacf(df.ts, lag.max = 50, plot = FALSE)
plot(PartialAutocorrelation, main = "PACF of Earnings")
par(mfrow=c(4,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
par(mfrow=c(3,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
par(mfrow=c(2,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
par(mfrow=c(4,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
par(mfrow=c(3,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
par(mfrow=c(3,2))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
par(mfrow=c(1,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
par(mfrow=c(2,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
Autocorrelation <- acf(df.ts, lag.max = 50, plot = FALSE)
plot(Autocorrelation, main = "ACF of Earnings")
PartialAutocorrelation <- pacf(df.ts, lag.max = 50, plot = FALSE)
plot(PartialAutocorrelation, main = "PACF of Earnings")
par(mfrow=c(2,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
Autocorrelation <- acf(df.ts, lag.max = 12, plot = FALSE)
plot(Autocorrelation, main = "ACF of Earnings")
PartialAutocorrelation <- pacf(df.ts, lag.max = 12, plot = FALSE)
plot(PartialAutocorrelation, main = "PACF of Earnings")
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit1)
print(AIC(fit1))
tsdiag(fit2)
tsdiag(fit3)
tsdiag(fit4)
tsdiag(fit5)
tsdiag(fit6)
tsdiag(fit7)
tsdiag(fit8)
tsdiag(fit9)
tsdiag(fit10)
tsdiag(fit11)
tsdiag(fit12)
tsdiag(fit11)
tsdiag(fit3)
tsdiag(fit12)
tsdiag(fit13)
tsdiag(fit14)
tsdiag(fit15)
tsdiag(fit11)
tsdiag(fit15)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit1)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit2)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit3)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit4)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit5)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit7)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit8)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit9)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit1)
tsdiag(fit2)
tsdiag(fit5)
tsdiag(fit4)
tsdiag(fit5)
tsdiag(fit11)
tsdiag(fit5)
tsdiag(fit6)
tsdiag(fit7)
tsdiag(fit15)
tsdiag(fit14)
tsdiag(fit15)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit1)
tsdiag(fit2)
tsdiag(fit3)
tsdiag(fit4)
AIC(fit6)
AIC(fit4)
AIC(fit5)
AIC(fit6)
AIC(fit7)
AIC(fit15)
par(mfrow=c(2,1))
Autocorrelation1 <- acf(logdf.ts, lag.max = 12, plot = FALSE)
plot(Autocorrelation1, main = "ACF of Earnings")
PartialAutocorrelation1 <- pacf(logdf.ts, lag.max = 12, plot = FALSE)
plot(PartialAutocorrelation1, main = "PACF of Earnings")
par(mfrow=c(2,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
Autocorrelation <- acf(df.ts, lag.max = 12, plot = FALSE)
plot(Autocorrelation, main = "ACF of Earnings")
PartialAutocorrelation <- pacf(df.ts, lag.max = 12, plot = FALSE)
plot(PartialAutocorrelation, main = "PACF of Earnings")
Autocorrelation1 <- acf(logdf.ts, lag.max = 12, plot = FALSE)
plot(Autocorrelation1, main = "ACF of Log Earnings")
PartialAutocorrelation1 <- pacf(logdf.ts, lag.max = 12, plot = FALSE)
plot(PartialAutocorrelation1, main = "PACF of Log Earnings")
par(mfrow=c(2,1))
plot.ts(df.ts,
main = "Timeseries of Observed Earnings",
xlab = "Time",
ylab = "Earnings per Share" )
plot.ts(logdf.ts,
main = "Timeseries of Observed Log Earnings",
xlab = "Time",
ylab = "Earnings per Share")
Autocorrelation <- acf(df.ts, lag.max = 12, plot = FALSE)
plot(Autocorrelation, main = "ACF of Earnings")
PartialAutocorrelation <- pacf(df.ts, lag.max = 12, plot = FALSE)
plot(PartialAutocorrelation, main = "PACF of Earnings")
Autocorrelation1 <- acf(logdf.ts, lag.max = 12, plot = FALSE)
plot(Autocorrelation1, main = "ACF of Log Earnings")
PartialAutocorrelation1 <- pacf(logdf.ts, lag.max = 12, plot = FALSE)
plot(PartialAutocorrelation1, main = "PACF of Log Earnings")
library(aTSA)
library(stats)
library(lmtest)
library(forecast)
plot.ts(NoSeaso.earnings,
main = "The Differenced series (1-B^4)" ,
xlab = "Time",
ylab= "Earnings per Share")
NoLogSeaso.earnings = diff(logdf.ts, lag=4)
NoTrend.Seaso.earnings = diff(NoLogSeaso.earnings, lag=1)
plot.ts(NoTrend.Seaso.earnings,
main = "The Difference Series (1-B)(1-B^4)X_t" ,
x_lab = "Time",
y_lab = "Earnings per Share")
NoSeaso.earnings = diff(df.ts, lag=1)
plot.ts(NoSeaso.earnings,
main = "The Differenced series (1-B)" ,
xlab = "Time",
ylab= "Earnings per Share")
NoLogSeaso.earnings = diff(logdf.ts, lag=4)
NoTrend.Seaso.earnings = diff(NoLogSeaso.earnings, lag=1)
plot.ts(NoTrend.Seaso.earnings,
main = "The Difference Series (1-B)(1-B^4)X_t" ,
x_lab = "Time",
y_lab = "Earnings per Share")
plot.ts(NoSeaso.earnings,
main = "The Differenced series (1-B)" ,
xlab = "Time",
ylab= "Earnings per Share")
plot.ts(NoSeaso.earnings4,
main = "The Differenced series (1-B)^4" ,
xlab = "Time",
ylab= "Earnings per Share")
NoSeaso.earnings = diff(df.ts, lag=1)
NoSeaso.earnings4 = diff(df.ts, lag=4)
plot.ts(NoSeaso.earnings,
main = "The Differenced series (1-B)" ,
xlab = "Time",
ylab= "Earnings per Share")
plot.ts(NoSeaso.earnings4,
main = "The Differenced series (1-B)^4" ,
xlab = "Time",
ylab= "Earnings per Share")
plot.ts(NoSeaso.earnings,
main = "The Differenced series (1-B)" ,
xlab = "Time",
ylab= "Earnings per Share")
plot.ts(NoSeaso.earnings4,
main = "The Differenced series (1-B)^4" ,
xlab = "Time",
ylab= "Earnings per Share")
par(mfrow=c(2,1))
plot.ts(NoSeaso.earnings,
main = "The Differenced series (1-B)" ,
xlab = "Time",
ylab= "Earnings per Share")
plot.ts(NoSeaso.earnings4,
main = "The Differenced series (1-B)^4" ,
xlab = "Time",
ylab= "Earnings per Share")
earnings<-logdf.ts
fit0=arima(earnings, order=c(0,1,0), seasonal = list(order=c(0,1,0), period=4))
fit1=arima(earnings, order = c(1,1,0), seasonal = list(order= c(0,1,0), period=4))
fit2=arima(earnings, order = c(1,1,1), seasonal = list(order=c(0,1,0), period=4))
fit3=arima(earnings, order = c(1,1,1), seasonal = list(order=c(1,1,0), period=4))
fit4=arima(earnings, order = c(1,1,1), seasonal = list(order=c(1,1,1), period=4))
fit5=arima(earnings, order = c(1,1,0), seasonal = list(order=c(1,1,1), period=4))
fit6=arima(earnings, order = c(1,1,0), seasonal = list(order=c(0,1,1), period=4))
fit7=arima(earnings, order = c(1,1,1), seasonal = list(order=c(0,1,0), period=4))
fit8=arima(earnings, order = c(0,1,1), seasonal = list(order=c(1,1,1), period=4))
fit9=arima(earnings, order = c(0,1,1), seasonal = list(order=c(0,1,0), period=4))
fit10=arima(earnings, order = c(0,1,1), seasonal = list(order=c(1,1,0), period=4))
fit11=arima(earnings, order = c(0,1,1), seasonal = list(order=c(0,1,1), period=4))
fit12=arima(earnings, order = c(0,1,0), seasonal = list(order=c(1,1,1), period=4))
fit13=arima(earnings, order = c(0,1,0), seasonal = list(order=c(1,1,0), period=4))
fit14=arima(earnings, order = c(0,1,0), seasonal = list(order=c(0,1,1), period=4))
fit15=arima(earnings, order = c(1,1,0), seasonal = list(order=c(1,1,0), period=4))
coeftest(fit0)
coeftest(fit1)
coeftest(fit2)
coeftest(fit3)
coeftest(fit4)
coeftest(fit5)
coeftest(fit6)
coeftest(fit7)
coeftest(fit8)
coeftest(fit9)
coeftest(fit10)
coeftest(fit11)
coeftest(fit12)
coeftest(fit13)
coeftest(fit14)
coeftest(fit15)
install.packages(aTSA)
install.packages("aTSA")
install.packages("statsr")
install.packages("lmtest")
library(aTSA)
library(stats)
library(lmtest)
library(forecast)
library(aTSA)
library(stats)
library(lmtest)
fit0=arima(earnings, order=c(0,1,0), seasonal = list(order=c(0,1,0), period=4))
fit1=arima(earnings, order = c(1,1,0), seasonal = list(order= c(0,1,0), period=4))
fit2=arima(earnings, order = c(1,1,1), seasonal = list(order=c(0,1,0), period=4))
fit3=arima(earnings, order = c(1,1,1), seasonal = list(order=c(1,1,0), period=4))
fit4=arima(earnings, order = c(1,1,1), seasonal = list(order=c(1,1,1), period=4))
fit5=arima(earnings, order = c(1,1,0), seasonal = list(order=c(1,1,1), period=4))
fit6=arima(earnings, order = c(1,1,0), seasonal = list(order=c(0,1,1), period=4))
fit7=arima(earnings, order = c(1,1,1), seasonal = list(order=c(0,1,0), period=4))
fit8=arima(earnings, order = c(0,1,1), seasonal = list(order=c(1,1,1), period=4))
fit9=arima(earnings, order = c(0,1,1), seasonal = list(order=c(0,1,0), period=4))
fit10=arima(earnings, order = c(0,1,1), seasonal = list(order=c(1,1,0), period=4))
fit11=arima(earnings, order = c(0,1,1), seasonal = list(order=c(0,1,1), period=4))
fit12=arima(earnings, order = c(0,1,0), seasonal = list(order=c(1,1,1), period=4))
fit13=arima(earnings, order = c(0,1,0), seasonal = list(order=c(1,1,0), period=4))
fit14=arima(earnings, order = c(0,1,0), seasonal = list(order=c(0,1,1), period=4))
fit15=arima(earnings, order = c(1,1,0), seasonal = list(order=c(1,1,0), period=4))
coeftest(fit0)
coeftest(fit1)
coeftest(fit2)
coeftest(fit3)
coeftest(fit4)
coeftest(fit5)
coeftest(fit6)
coeftest(fit7)
coeftest(fit8)
coeftest(fit9)
coeftest(fit10)
coeftest(fit11)
coeftest(fit12)
coeftest(fit13)
coeftest(fit14)
coeftest(fit15)
tsdiag(fit1)
tsdiag(fit5)
tsdiag(fit6)
tsdiag(fit8)
tsdiag(fit9)
tsdiag(fit10)
tsdiag(fit11)
tsdiag(fit15)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit1)
tsdiag(fit10)
tsdiag(fit1)
tsdiag(fit5)
tsdiag(fit6)
tsdiag(fit8)
tsdiag(fit9)
tsdiag(fit9)
tsdiag(fit10)
tsdiag(fit11)
tsdiag(fit13)
tsdiag(fit14)
tsdiag(fit15)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit1)
#MODEL SELECTION - CHECKING RESIDUALS
tsdiag(fit1)
tsdiag(fit5)
tsdiag(fit6)
tsdiag(fit8)
tsdiag(fit10)
tsdiag(fit11)
tsdiag(fit15)
AIC(fit1)
AIC(fit5)
AIC(fit6)
AIC(fit8)
AIC(fit10)
AIC(fit11)
AIC(fit15)
set.seed(11)
##Load the Libraries##
library(aTSA)
library(stats)
library(lmtest)
library(forecast)
##Read the Data##
GDP<-read.csv("C:/Users/steph/OneDrive/Documents/Stats505/GDPUSA.csv")
logGDP<-log(GDP$GDP)
logGDP.ts<-ts(data=logGDP, frequency=4, start=c(1947, 1), end=c(2007, 4))
##Plot the logGDP Time Series##
par(mfrow=c(3, 1))
plot.ts(logGDP.ts, main="The Quarterly GDP, 1947-2007", ylab="ln(GDP)")
acf(logGDP.ts, lag.max =50)
pacf(logGDP.ts, lag.max=50)
##Verify that logGDP is not stationary##
adf.test(logGDP.ts)
##Differece the Data##
notrend.logGDP.ts<-diff(logGDP.ts, lag=1)
plot.ts(notrend.logGDP.ts, main="The Untrended Quarterly GDP, 1947-2007", ylab="ln(GDP)")
acf(notrend.logGDP.ts, lag.max=50)
pacf(notrend.logGDP.ts, lag.max=50)
##Check for Stationarity##
adf.test(notrend.logGDP.ts)
##Makings the Models##
fit1<-arima(logGDP.ts, order=c(0,1,0))
fit2<-arima(logGDP.ts, order=c(0,1,1))
fit3<-arima(logGDP.ts, order=c(0,1,2))
fit4<-arima(logGDP.ts, order=c(1, 1, 0))
fit5<-arima(logGDP.ts, order=c(1, 1, 1))
fit6<-arima(logGDP.ts, order=c(1, 1, 2))
fit7<-arima(logGDP.ts, order=c(2, 1, 0))
fit8<-arima(logGDP.ts, order=c(2, 1, 1))
fit9<-arima(logGDP.ts, order=c(2, 1, 2))
##Coefficient Validation##
coeftest(fit1)
coeftest(fit2)
coeftest(fit3)
coeftest(fit4)
coeftest(fit5)
coeftest(fit6)
coeftest(fit7)
coeftest(fit8)
coeftest(fit9)
##Residual~White Noise Validation##
tsdiag(fit2)
pacf(fit2$residuals)
tsdiag(fit3)
pacf(fit3$residuals)
tsdiag(fit4)
pacf(fit4$residuals)
tsdiag(fit5)
pacf(fit5$residuals)
tsdiag(fit6)
pacf(fit6$residuals)
tsdiag(fit7)
pacf(fit7$residuals)
tsdiag(fit8)
pacf(fit8$residuals)
##BIC for each Model##
AIC(fit7, k=log(2))
AIC(fit8, k=log(2))
par(mfrow=c(1,1))
##Forecasts and Predictions##
predict8<- forecast(fit8, h=12)
plot(predict8)
##Coefficient Validation##
coeftest(fit1)
coeftest(fit2)
coeftest(fit3)
coeftest(fit4)
coeftest(fit5)
coeftest(fit6)
coeftest(fit7)
coeftest(fit8)
coeftest(fit9)
##BIC for each Model##
AIC(fit7, k=log(2))
AIC(fit8, k=log(2))
